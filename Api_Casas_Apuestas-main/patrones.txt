Los distintos tipos de patrones se identificaran en este fichero.
Los 8 diferentes patrones son:

-COMMAND:

-FACTORY_METHOD: \utils\logger.py

-DECORATOR: - \services\decorators.py( @property)
            - \validate\validate_apuesta.py( @property)
            - \validate\validate_cliente.py( @property)
            - \validate\validate_cuota.py( @property)
            - \validate\validate_equipo.py( @property)
            - \validate\validate_partido.py( @property)


            - \repositories\repositorio.py (@propierty)
            - \repositories\repositoriocliente.py (@propierty)
            - \repositories\repositoriocuota.py (@propierty)
            - \repositories\repositorioempresa.py (@propierty)
            - \repositories\repositorioequipo.py (@propierty)
            - \repositories\repositoriopartido.py (@propierty)


            - \models\apuesta.py (@hybrid_property)
            - \models\cliente.py (@hybrid_property)
            - \models\cuota.py (@hybrid_property)
            - \models\empresa.py (@hybrid_property)
            - \models\equipo.py (@hybrid_property)
            - \models\partido.py (@hybrid_property)
            - \validate\validate_apuesta.py\validate_apuesta (@validate_cliente.validar_cliente())
            - \validate\validate_apuesta.py\validate_apuesta (@validate_equipo.validar_equipo())
            - \validate\validate_apuesta.py\validate_apuesta (@self.validar_monto())
            - \validate\validate_apuesta.py\validate_apuesta (@validate_partido.validar_partido())
            - \validate\validate_apuesta.py\validate_apuesta (@validate_partido.validar_partido_finalizado())
            - \controllers\apuesta.py (@validate_apuesta.validar_apuesta_existe())
            - \controllers\apuesta.py (@validate_apuesta.validar_apuesta())
            - \controllers\cuota.py(@validate_cuota.validar_cuota())
            - \controllers\equipos.py (@validate_equipo.validar_equipos())
            - \controllers\partidos.py (@validate_partido.validar_partido())
            - \controllers\partidos.py (@validate_equipo.validar_equipos())

-ADAPTER: - \repositories\repositoriopartido.py

-QUERY OBJECT (Patrón estructural): -\controllers\apuesta.py
                                    -\controllers\clientes.py
                                    -\controllers\cuota.py
                                    -\controllers\partidos.py


-OBSERVER:  -\mail\functions.py

-STRATEGY:

-SINGLETON: - \services\decorators.py
            - \utils\singleton.py(@staticmethod)
            - \repositories\repositorioapuesta.py (@singleton_pattern.singleton)

-ABSTRACT_FACTORY:
            - \services\apuesta.py
            - \repositories\repositorioapuesta.py (@abstractmethod)
            - \repositories\repositoriobase.py (@abstractmethod)


-Builder (constructor):
            -/models/apuesta.py(.setter, .deleter)
            -/models/cliente.py(.setter, .deleter)
            -/models/cuota.py(.setter, .deleter)
            -/models/empresa.py(.setter, .deleter)
            -/models/equipo.py(.setter, .deleter)
            -/models/partido.py(.setter, .deleter)







he peusto los setter y deleter como builders no sé si estará bn
creo que todos los que tienen que ver con marshmallow son decoradores pero no lo sé seguro (\map)
eso yo creo que algo tienen que ver con la clase ABSTRACT_FACTORY